# This is a basic workflow to help you get started with Actions

name: Release TestNG to Maven Central

# Trigger this workflow whenever code is pushed to "master" branch.defaults:
# We would like to publish to maven central for both snapshot and release versions.
on:
  workflow_dispatch:
    inputs:
      release_candidate:
        description: The release candidate number that was already published
        required: true
        default: '1'
      staging_repository_id:
        description: The staging repository ID obtained from workflow run logs of "publish-maven-central.yml" for e.g., (orgtestng-1082)
        required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Gradle wrapper validation
      uses: gradle/wrapper-validation-action@v1

    # Runs a single command using the runners shell
    - name: Install gpg secret key
      run: |
        cat <(echo -e "${{ secrets.GPG_SECRET_KEY }}") | gpg --batch --import
        gpg --export-secret-keys >$HOME/.gnupg/secring.gpg
        gpg --list-secret-keys --keyid-format LONG
        ls -l $HOME/.gnupg

    - name: Create Nexus.txt with staging repository details
      run: |
         mkdir -p build/stagingRepositories
         echo -n ${{ github.event.inputs.staging_repository_id }} > build/stagingRepositories/nexus.txt

    # FIXME Check https://github.com/allure-framework/allure2/blob/430255d8cf5c236ed29bc0df0b72dcd9389c3df9/.github/workflows/release.yaml
    - name: Publish Release Candidate
      run: |
        ./gradlew -PghGitSourceUsername=cbeust -PghGitSourcePassword=${{ secrets.GITHUB_TOKEN }} -PghDryRun -PghNexusUsername=${{ secrets.SONATYPE_USER }} -PghNexusPassword=${{ secrets.SONATYPE_PASSWORD }} -Psigning.secretKeyRingFile=$HOME/.gnupg/secring.gpg -Psigning.password="" -Psigning.keyId=${{ secrets.GPG_KEY_ID }} -Prc=${{ github.event.inputs.release_candidate }} publishDist
